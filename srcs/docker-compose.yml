version: '3.7'

services:
  mariadb:
    container_name: mariadb
    hostname: mariadb
    build:
      context: ./requirements/mariadb
      dockerfile: Dockerfile
    ports: 
      - "${MARIADB_PORT}:${MARIADB_PORT}"
    restart: unless-stopped
    networks:
      - back
    volumes:
      - "mariadb_volume:${DB_PATH}"
    environment:
      - DB_PATH=${DB_PATH}
      - DATABASE_NAME=${DATABASE_NAME}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
    command: ["/usr/bin/mysqld_safe"]

    # docker exec -it mariadb bash

  wordpress:
    container_name: wordpress
    hostname: wordpress
    build:
      context: ./requirements/wordpress
      dockerfile: Dockerfile
    expose:
      - "${WP_PORT}"
    depends_on:
      - "redis"
      - "mariadb"
    restart: unless-stopped
    volumes:
      - "wordpress_volume:${WP_PATH}"
    networks:
      - front
      - back
    environment:
      - WP_PATH=${WP_PATH}
      - WP_TITLE=${WP_TITLE}
      - CONF_FILE_PATH=${CONF_FILE_PATH}
      - DOMAIN_NAME=${DOMAIN_NAME}
      - WP_LOCAL_PATH=${WP_LOCAL_PATH}
      - ADMIN_MAIL=${ADMIN_MAIL}
      - DB_HOST=${DB_HOST}
      - EMAIL=${EMAIL}
      - DATABASE_NAME=${DATABASE_NAME}
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - USERNAME=${USERNAME}
      - PASSWORD=${PASSWORD}
    command: ["php-fpm7.3", "-F"]

  nginx:
    container_name: nginx
    hostname: nginx
    build:
      context: ./requirements/nginx
      dockerfile: Dockerfile
    ports:
      - "${NGINX_PORT}:${NGINX_PORT}"
    depends_on:
      - "wordpress"
    restart: unless-stopped
    volumes:
      - "wordpress_volume:${WP_PATH}"
    networks:
      - front
    environment:
      - NGINX_PORT=${NGINX_PORT}
    command: ["nginx", "-g", "daemon off;"]

  redis:
    container_name: redis
    hostname: redis
    build:
      context: ./requirements/redis
      dockerfile: Dockerfile
    expose:
      - "${REDIS_PORT}"
    restart: unless-stopped
    volumes:
      - "wordpress_volume:${WP_PATH}"
    networks:
      - front
    environment:
      - REDIS_PORT=${REDIS_PORT}
    command: ["/usr/bin/redis-server", "--protected-mode no"]

  adminer:
    container_name: adminer
    hostname: adminer
    build:
      context: ./requirements/adminer
      dockerfile: Dockerfile
    ports:
      - "${ADMINER_PORT}:${ADMINER_PORT}"
    depends_on:
      - "mariadb"
    restart: unless-stopped
    volumes:
      - "mariadb_volume:${DB_PATH}"
    networks:
      - back
    environment:
      - ADMINER_PORT=${ADMINER_PORT}
      - ADMINER_VERSION=${ADMINER_VERSION}
    command: ["php", "-S", "0.0.0.0:${ADMINER_PORT}"]

    # user : mamaurai | password : Inception123 | DB : Inception

  vsftpd:
    container_name: vsftpd
    hostname: vsftpd
    build:
      context: ./requirements/vsftpd
      dockerfile: Dockerfile
    ports:
      - "20:20"
      - "21:21"
      - "40000-40009:40000-40009"
    depends_on:
      - "wordpress"
    restart: unless-stopped
    volumes:
      - "wordpress_volume:${WP_PATH}"
    networks:
      - front
    environment:
      - FTP_USER=${FTP_USER}
      - FTP_PASSWORD=${FTP_PASSWORD}
    command: ["vsftpd", "/etc/vsftpd.conf"]

    # host : localhost | user : mamaurai | password : Inception123 | port : 21

  nodejs:
    container_name: nodejs
    hostname: nodejs
    build:
      context: ./requirements/nodejs
      dockerfile: Dockerfile
      args:
        - NODEJS_SETUP=${NODEJS_SETUP}
        - NODEJS_PATH=${NODEJS_PATH}
    ports:
      - "${NODEJS_PORT}:${NODEJS_PORT}"
    restart: unless-stopped
    volumes:
      - "nodejs_volume:${NODEJS_VOLUME}"
    command: ["npm", "--prefix", "${NODEJS_PATH}", "start"]

    # url : localhost:3000

  portainer:
    container_name: portainer
    hostname: portainer
    build:
      context: ./requirements/portainer
      dockerfile: Dockerfile
      args:
        - PORTAINER_VERSION=${PORTAINER_VERSION}
    ports:
      - "${PORTAINER_PORT}:${PORTAINER_PORT}"
    restart: unless-stopped
    volumes:
      - "${DOCKER_SOCKET}:${DOCKER_SOCKET}"
      - "portainer_volume:/data"
    networks:
      - back
      - front
    environment:
      - PORTAINER_VERSION=${PORTAINER_VERSION}
      - PORTAINER_PORT=${PORTAINER_PORT}
    command: ["/opt/portainer/portainer", "--admin-password", "$$2y$$05$$3ciFxlH7ln8qzq4ePFcYsOfBofr5eyn6Xdb1cgQ8h3GQwNvp2XjZq"]

    # login : admin | password :  superpassword | url : localhost:9443

volumes:
  wordpress_volume:
    driver: "local"
    driver_opts:
      o: bind 
      type: "none"
      device: ${VOLUME_PATH}/wordpress
  mariadb_volume:
    driver: "local"
    driver_opts:
      o: bind 
      type: "none"
      device: ${VOLUME_PATH}/mariadb
  nodejs_volume:
    driver: "local"
    driver_opts:
      o: bind 
      type: "none"
      device: ${VOLUME_PATH}/nodejs
  portainer_volume:
    driver: "local"
    driver_opts:
      o: bind 
      type: "none"
      device: ${VOLUME_PATH}/portainer

networks:
  front:
    driver: bridge
  back:
    driver: bridge